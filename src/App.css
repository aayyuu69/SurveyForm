import React, { useState, useEffect } from 'react';
import WelcomeScreen from './WelcomeScreen';
import Question from './Question';
import CompletionScreen from './CompletionScreen';

const App = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [answers, setAnswers] = useState({});
  const [completed, setCompleted] = useState(false);
  const [surveyStarted, setSurveyStarted] = useState(false);

  const questions = [
    { id: 1, text: "How satisfied are you with our products?", type: "rating", range: 5 },
    { id: 2, text: "How fair are the prices compared to similar retailers?", type: "rating", range: 5 },
    { id: 3, text: "How satisfied are you with the value for money of your purchase?", type: "rating", range: 5 },
    { id: 4, text: "On a scale of 1-10 how would you recommend us to your friends and family?", type: "rating", range: 10 },
    { id: 5, text: "What could we do to improve our service?", type: "text" }
  ];

  const handleAnswer = (questionId, answer) => {
    setAnswers({ ...answers, [questionId]: answer });
  };

  const nextQuestion = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1);
    }
  };

  const prevQuestion = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1);
    }
  };

  const submitSurvey = () => {
    // Store answers in local storage or send via AJAX
    localStorage.setItem('surveyAnswers', JSON.stringify(answers));
    setCompleted(true);
    setTimeout(() => {
      setSurveyStarted(false);  // Redirect back to welcome screen after 5 seconds
    }, 5000);
  };

  return (
    <div className="App">
      {!surveyStarted ? (
        <WelcomeScreen onStart={() => setSurveyStarted(true)} />
      ) : completed ? (
        <CompletionScreen />
      ) : (
        <Question
          question={questions[currentQuestion]}
          current={currentQuestion + 1}
          total={questions.length}
          onNext={nextQuestion}
          onPrev={prevQuestion}
          onSubmit={submitSurvey}
          onAnswer={handleAnswer}
          answer={answers[questions[currentQuestion].id] || ''}
        />
      )}
    </div>
  );
};

export default App;
